{"version":3,"sources":["quill.tsx","index.tsx"],"names":["withStreamlitConnection","timeout","args","divRef","useRef","useEffect","Streamlit","setFrameHeight","window","katex","ro","ResizeObserver","current","observe","disconnect","ref","defaultValue","modules","toolbar","list","history","delay","maxStack","userOnly","placeholder","preserveWhitespace","readOnly","onChange","content","delta","source","editor","clearTimeout","setTimeout","setComponentValue","html","getText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAsEeA,G,cAAAA,aArDD,SAAC,GAA0B,IAGnCC,EAHWC,EAAuB,EAAvBA,KACTC,EAASC,iBAAuB,MAWtCC,qBAAU,WACRC,IAAUC,iBAEVC,OAAOC,MAAQA,IAEf,IAAMC,EAAK,IAAIC,KAAe,WAC5BL,IAAUC,oBAMZ,OAHIJ,EAAOS,SACTF,EAAGG,QAAQV,EAAOS,SAEb,kBAAMF,EAAGI,gBACf,IAcH,OACE,yBAAKC,IAAKZ,GACR,kBAAC,IAAD,CACEa,aAAcd,EAAKc,aACnBC,QAhBU,CACdC,QAAS,CACP,CAAC,OAAQ,SAAU,aACnB,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,YAEhCC,QAAS,CACPC,MAAO,IACPC,SAAU,IACVC,UAAU,IASRC,YAAatB,EAAKsB,YAClBC,mBAAoBvB,EAAKuB,mBACzBC,SAAUxB,EAAKwB,SACfC,SA1Ce,SAACC,EAAiBC,EAAYC,EAAaC,GAC9DC,aAAa/B,GACbA,EAAUgC,YAAW,WACnB3B,IAAU4B,kBAAkBhC,EAAKiC,KAAOP,EAAUG,EAAOK,aACxD,aCtBPC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0484dd5b.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection\n} from \"streamlit-component-lib\";\nimport React, { useEffect, useRef } from \"react\"\nimport ReactQuill from \"react-quill\"\nimport ResizeObserver from \"resize-observer-polyfill\"\nimport katex from \"katex\"\n\nimport \"katex/dist/katex.min.css\"\nimport \"quill/dist/quill.snow.css\"\n\ninterface QuillProps extends ComponentProps {\n  args: any\n}\n\nconst Quill = ({ args }: QuillProps) => {\n  const divRef = useRef<HTMLDivElement>(null)\n\n  let timeout: NodeJS.Timeout\n\n  const handleChange = (content: string, delta: any, source: any, editor: any) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      Streamlit.setComponentValue(args.html ? content : editor.getText())\n    }, 200)\n  }\n\n  useEffect(() => {\n    Streamlit.setFrameHeight()\n\n    window.katex = katex\n\n    const ro = new ResizeObserver(() => {\n      Streamlit.setFrameHeight()\n    })\n\n    if (divRef.current)\n      ro.observe(divRef.current)\n\n    return () => ro.disconnect()\n  }, [])\n\n  const modules = {\n    toolbar: [\n      ['bold', 'italic', 'underline'],\n      [{ list: 'ordered' }, { list: 'bullet' }],\n    ],\n    history: {\n      delay: 1000,\n      maxStack: 500,\n      userOnly: true,\n    }\n  }\n\n  return (\n    <div ref={divRef}>\n      <ReactQuill\n        defaultValue={args.defaultValue}\n        modules={modules}\n        placeholder={args.placeholder}\n        preserveWhitespace={args.preserveWhitespace}\n        readOnly={args.readOnly}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\nexport default withStreamlitConnection(Quill)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Quill from \"./quill\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Quill />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}